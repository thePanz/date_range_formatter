<?php

/**
 * Implements hook_field_formatter_info().
 */
function date_range_formatter_field_formatter_info() {
  $formatters = array(
    'date_range_without_time' => array(
      'label' => t('Date range (without time)'),
      'field types' => array('date', 'datestamp', 'datetime'),
      'settings' => array(
        'single' => t('d F Y'),
        'one_day' => y('d F Y'),
        'one_month' => t('d - {d} F Y'),
        'several_months' => t('d F - {d} {F} Y'),
        'several_years' => t('d F Y - {d} {F} {Y}'),
      ),
    ),
  );
  return $formatters;
}

/**
 * Implements hook_field_formatter_settings_form().
 */
function date_range_formatter_field_formatter_settings_form($field, $instance, $view_mode, $form, &$form_state) {
  $display = $instance['display'][$view_mode];
  $formatter = $display['type'];
  $settings = $display['settings'];

  $form = array();

  switch ($formatter) {
    case 'date_range_without_time':
      $form['single'] = array(
        '#type' => 'textfield',
        '#title' => t('Date format for single date'),
        '#default_value' => $settings['single'],
      );
      $form['one_day'] = array(
        '#type' => 'textfield',
        '#title' => t('ate format for the single day date range'),
        '#default_value' => $settings['one_day'],
      );
      $form['one_month'] = array(
        '#type' => 'textfield',
        '#title' => t('Date format for the single month date range'),
        '#default_value' => $settings['one_month'],
      );
      $form['several_months'] = array(
        '#type' => 'textfield',
        '#title' => t('Date format for the single year date range'),
        '#default_value' => $settings['several_months'],
      );
      $form['several_years'] = array(
        '#type' => 'textfield',
        '#title' => t('Date format for multiple years date range'),
        '#default_value' => $settings['several_years'],
      );
      $form['help'] = array(
        '#type' => 'markup',
        '#markup' => t('A user-defined date format. See the <a href="@url">PHP manual</a> for available options.', array('@url' => 'http://php.net/manual/function.date.php')) .
          '<br />' . t('Use letters in braces for end date elements, for example, {d} means the day of the end date.'),
      );
      break;
  }

  return $form;
}

/**
 * Settings summary for the default formatter.
 */
function date_range_formatter_field_formatter_settings_summary($field, $instance, $view_mode) {
  $display = $instance['display'][$view_mode];
  $settings = $display['settings'];
  $formatter = $display['type'];
  $summary = '';

  switch ($formatter) {
    case 'date_range_without_time':
      $summary = t('Display date range using formats: @single, @one_day, @one_month, @several_months, @several_years',
        array(
          '@single' => $settings['single'],
          '@one_day' => $settings['one_day'],
          '@one_month' => $settings['one_month'],
          '@several_months' => $settings['several_months'],
          '@several_years' => $settings['several_years'],
        )
      );
      break;
  }

  return $summary;
}

/**
 * Implements hook_field_formatter_view().
 */
function date_range_formatter_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $element = array();
  $settings = $display['settings'];
  $formatter = $display['type'];

  switch ($formatter) {
    case 'date_range_without_time':
      foreach ($items as $delta => $item) {
        $date_item = date_formatter_process('format_interval', $entity_type, $entity, $field, $instance, $langcode, $item, $display);
        if (empty($item['value2']) || $item['value'] == $item['value2']) {
          $element[$delta] = array('#markup' => htmlspecialchars(format_date(strtotime($date_item['value']['formatted_iso']), 'custom', t($settings['single']))));
        }
        else {
          $date1 = strtotime($date_item['value']['formatted_iso']);
          $date2 = strtotime($date_item['value2']['formatted_iso']);

          $format = t($settings['several_years']);
          if (date('d.m.Y', $date1) === date('d.m.Y', $date2)) {
            $format = t($settings['one_day']);
          }
          else if (date('m.Y', $date1) === date('m.Y', $date2)) {
            $format = t($settings['one_month']);
          }
          else if (date('Y', $date1) === date('Y', $date2)) {
            $format = t($settings['several_months']);
          }

          $date_str = format_date($date1, 'custom', preg_replace('/\{([a-zA-Z])\}/', '{\\\$1}', $format));

          $matches = array();
          if (preg_match_all('/\{([a-zA-Z])\}/', $date_str, $matches)) {
            foreach ($matches[1] as $match) { // Letter itself.
              $date_str = preg_replace('/\{' . $match . '\}/', format_date($date2, 'custom', $match), $date_str);
            }
          }

          $element[$delta] = array('#markup' => htmlspecialchars($date_str));
        }
      }
      break;
  }

  return $element;
}
